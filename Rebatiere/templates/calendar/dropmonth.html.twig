<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Calendar</title>
</head>
<body>

<mat-card class="calendar-card">
  <div class="month-year-div">
    <div class="month-select">
      <mat-select class="year-month-select" [(ngModel)]="selectedMonth" (ngModelChange)="onMonthYearChange()">
        <mat-option *ngFor="let month of months" [value]="month">
          {# {{month}} #}
        </mat-option>
      </mat-select>
    </div>

    <div class="year-select">
      <mat-select class="year-month-select" [(ngModel)]="selectedYear" (ngModelChange)="onMonthYearChange()">
        <mat-option *ngFor="let year of years" [value]="year">
          {# {{year}} #}
        </mat-option>
      </mat-select>
    </div>

  </div>
  <full-calendar class="full-calendar" #fullCalendar [options]="calendarOptions"></full-calendar>
</mat-card>

<script>
 calendarOptions = {
    initialView: 'dayGridMonth',
    plugins: [dayGridPlugin],
    initialDate: new Date(),
    weekends: true,
    firstDay: 1,
    datesSet: event => {
      const dateObj = new Date(event.end);
      const year = dateObj.getFullYear();
      const month = dateObj.getMonth();
      this.selectedMonth = month == 0 ? 'December' : this.months[month - 1];
      this.selectedYear = month == 0 ? year - 1 : year;

      this.calendarOptions.events = this.apiCallForCalendarEvents();
    },
    headerToolbar: {
      start: '',
      end: 'today prev next'
    },
  };

  function onMonthYearChange() {
    if (this.fullCalendar) {
      const date = new Date(this.selectedYear, this.months.indexOf(this.selectedMonth), 1);
      this.fullCalendar.getApi().gotoDate(date);
    }
  }
</script>

</body>
</html>
